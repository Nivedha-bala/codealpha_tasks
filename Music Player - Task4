MUSIC PLAYER

/*index.html*/

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Music Player</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="music-player">
    <h2>üéµ Music Player</h2>
    <p id="title">Title</p>
    <p id="artist">Artist</p>

    <audio id="audio" src=""></audio>

    <input type="range" id="progress" value="0" />
    
    <div class="controls">
      <button onclick="prevSong()">‚èÆÔ∏è</button>
      <button onclick="playPause()">‚ñ∂Ô∏è/‚è∏Ô∏è</button>
      <button onclick="nextSong()">‚è≠Ô∏è</button>
    </div>

    <div class="extra">
      <label>Volume: </label>
      <input type="range" id="volume" min="0" max="1" step="0.01" value="1">
    </div>

    <p id="duration">0:00 / 0:00</p>
  </div>

  <script src="script.js"></script>
</body>
</html>

/*style.css*/

body {
  font-family: Arial, sans-serif;
  background-color: #f0f0f0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

.music-player {
  background-color: #fff;
  padding: 30px;
  border-radius: 12px;
  text-align: center;
  width: 320px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

h2 {
  color: #333;
}

#title, #artist {
  margin: 10px 0;
  font-weight: bold;
}

.controls button {
  padding: 10px;
  margin: 10px 5px;
  font-size: 16px;
  border: none;
  background: #6c63ff;
  color: white;
  border-radius: 8px;
  cursor: pointer;
}

.controls button:hover {
  background-color: #4e45d4;
}

#progress, #volume {
  width: 100%;
  margin: 10px 0;
}

.extra {
  margin: 10px 0;
}

/*script.js*/

const songs = [
  { title: "Instrumental Guitar ‚ô´üé∏÷∂÷∏÷¢", artist: "Artist 1", file: "song1.mp3" },
  { title: "Happy Kids üß∏", artist: "Artist 2", file: "song2.mp3" },
  { title: "UpBeat üòÑ", artist: "Artist 3", file: "song3.mp3" },
];

let currentSong = 0;
const audio = document.getElementById("audio");
const title = document.getElementById("title");
const artist = document.getElementById("artist");
const progress = document.getElementById("progress");
const volume = document.getElementById("volume");
const durationDisplay = document.getElementById("duration");

function loadSong(song) {
  title.textContent = song.title;
  artist.textContent = song.artist;
  audio.src = song.file;
  audio.load();
}

function playPause() {
  if (audio.paused) {
    audio.play();
  } else {
    audio.pause();
  }
}

function nextSong() {
  currentSong = (currentSong + 1) % songs.length;
  loadSong(songs[currentSong]);
  audio.play();
}

function prevSong() {
  currentSong = (currentSong - 1 + songs.length) % songs.length;
  loadSong(songs[currentSong]);
  audio.play();
}

audio.addEventListener("timeupdate", () => {
  const percent = (audio.currentTime / audio.duration) * 100;
  progress.value = percent || 0;
  durationDisplay.textContent = `${formatTime(audio.currentTime)} / ${formatTime(audio.duration)}`;
});

progress.addEventListener("input", () => {
  audio.currentTime = (progress.value / 100) * audio.duration;
});

volume.addEventListener("input", () => {
  audio.volume = volume.value;
});

audio.addEventListener("ended", nextSong); // autoplay next

function formatTime(time) {
  if (isNaN(time)) return "0:00";
  const minutes = Math.floor(time / 60);
  const seconds = Math.floor(time % 60).toString().padStart(2, "0");
  return `${minutes}:${seconds}`;
}

window.onload = () => {
  loadSong(songs[currentSong]);
};
